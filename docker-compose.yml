version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - broker-kafka
    depends_on:
      - kafka
      - zookeeper
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  mongo:
    image: mongo:latest
    networks:
      - mongodb-network
    ports:
      - 27017:27017
    volumes:
      - ./mongo:/data/db
    environment:
      - MONGO_INITDB_DATABASE=pc_manager
      - MONGO_INITDB_ROOT_USERNAME=citizix
      - MONGO_INITDB_ROOT_PASSWORD=S3cret

  web:
    build: ./server
    ports:
      - "8000:80"
    environment:
      - KAFKA_TOPIC_NAME=topic_test
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    depends_on:
      - zookeeper
      - kafka
      - mongo
    volumes:
      - ./server/app:/code/app
    networks:
      - broker-kafka
      - mongodb-network
  # frontend:
  #    build: ./front
  #    volumes:
  #      - ./front:/react-docker:delegated
  #      - /node_modules
  #    ports:
  #      - 3000:3000
  #    environment:
  #      - CHOKIDAR_USEPOLLING=true
networks:
  broker-kafka:
    driver: bridge
  mongodb-network:
